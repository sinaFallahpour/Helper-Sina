@model IEnumerable<Helper.Models.Entities.TBL_Service>
@using Helper.Models.Utilities;
@using Helper.Models.Enums;
@{
    ViewData["Title"] = "آرشیو خدمت گیرندگان";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}


@section Style{

    <!-- DataTable -->
    @*<link rel="stylesheet" href="~/Admin/vendors/dataTable/dataTables.min.css" type="text/css">*@
    <link href="~/lib/swal-alert/sweetalert.css" rel="stylesheet" />
    <link href="~/SinaCustom/css/StyleSheet.css" rel="stylesheet" />

    <link href="~/lib/DataTable/datatables.min.css" rel="stylesheet" />
    <link href="~/lib/DataTable/responsive.dataTables.min.css" rel="stylesheet" />
}

<h1 class="text-center" style="text-shadow: 0.3px 1px #FF0000; "> آرشیو  خدمات(گیرنده) </h1>

<a asp-action="Index" class="btn btn-primary mb-3"> لیست خدمات(گیرنده) بررسی نشده </a>
<div class="card">
    <div class="card-body">


        <table id="example1" class="table table-striped table-bordered">
            <thead class="bg-info text-white _table-corder-reduse">
                <tr>
                    <th class="text-right _noneBorder">#</th>
                    <th class="text-right  _noneBorder">
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th class="text-right _noneBorder">
                        @Html.DisplayNameFor(model => model.Username)
                    </th>
                    <th class="text-right _noneBorder">
                        @Html.DisplayNameFor(model => model.CreateDate)
                    </th>
                    <th class="text-right _noneBorder">
                        @Html.DisplayNameFor(model => model.MinpRice)
                    </th>
                    <th class="text-right _noneBorder">
                        @Html.DisplayNameFor(model => model.MaxPrice)
                    </th>
                    <th class="text-center _noneBorder"> </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="text-right" style="vertical-align:middle"> @Html.DisplayFor(modelItem => item.Id) </td>

                        @*<td class="text-center"> <a href="@item.PhotoAddress">عکس </a>  </td>*@
                        <td class="text-right" style="vertical-align:middle">
                            @item.Title
                        </td>

                        <td class="text-right" style=" vertical-align:middle"> <a href="@Url.Action("OtherUserProfile","Profiles",new { area="",username=item.Username})"> @Html.DisplayFor(modelItem => item.Username)</a></td>
                        <td class="text-right" style="vertical-align:middle">  @item.CreateDate.ToPersianDateTime() </td>

                        <td class="text-right" style="vertical-align:middle">@item.MinpRice.GetPriceFormat()  ( @item.MonyUnit?.Name )</td>
                        <td class="text-right" style="vertical-align:middle"> @item.MaxPrice.GetPriceFormat() ( @item.MonyUnit?.Name )</td>

                        <td class="text-right" style="vertical-align:middle">

                            @if (!item.IsReaded)
                            {
                                <button type="button" class="text-white btn btn-sm btn-warning" id="read-@item.Id" onclick="ToggleServiceReaded(@item.Id)" ;>
                                    <i class="">بررسی نشد</i>
                                </button>
                            }
                            else
                            {
                                <button type="button" class="text-white btn btn-sm btn-success" id="read-@item.Id" onclick="ToggleServiceReaded(@item.Id)" ;>
                                    <i class="">بررسی شد</i>
                                </button>
                            }


                            @if (item.ConfirmServiceType == ConfirmServiceType.Confirmed)
                            {
                                <button type="button" class="text-white btn btn-sm btn-success" id="confirm-@item.Id" onclick="ToggleConfirmService('@item.Id', '@item.Username')">
                                    <i class="">تایید شد</i>
                                </button>
                            }
                            else
                            {
                                <button type="button" class="text-white btn  btn-sm btn-warning" id="confirm-@item.Id" onclick="ToggleConfirmService('@item.Id', '@item.Username')">
                                    <i class="">تایید نشد</i>
                                </button>
                            }

                            <a type="button" asp-action="Details" asp-route-id="@item.Id" id="details-@item.Id" class="text-white btn btn-sm btn-info">
                                <i class="">جزییات</i>
                            </a>


                        </td>
                    </tr>
                }
            </tbody>
            <tfoot class="bg-info text-white _table-corder-reduse">
                <tr>
                    <th class="text-right _noneBorder">#</th>
                    <th class="text-right  _noneBorder">
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th class="text-right _noneBorder">
                        @Html.DisplayNameFor(model => model.Username)
                    </th>
                    <th class="text-right _noneBorder">
                        @Html.DisplayNameFor(model => model.CreateDate)
                    </th>
                    <th class="text-right _noneBorder">
                        @Html.DisplayNameFor(model => model.MinpRice)
                    </th>
                    <th class="text-right _noneBorder">
                        @Html.DisplayNameFor(model => model.MaxPrice)
                    </th>
                    <th class="text-center _noneBorder"> </th>
                </tr>
            </tfoot>
        </table>

    </div>
</div>

@section Scripts{

    <script src="~/lib/swal-alert/sweetalert.min.js"></script>
    <script src="~/SinaCustom/js/main.js"></script>
    <link href="~/lib/LibStyles/LibStyles.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.blockUI/2.70/jquery.blockUI.min.js" integrity="sha512-eYSzo+20ajZMRsjxB6L7eyqo5kuXuS2+wEbbOkpaur+sA2shQameiJiWEzCIDwJqaB0a4a6tCuEvCOBHUg3Skg==" crossorigin="anonymous"></script>

    <script src="~/lib//DataTable/datatables.min.js"></script>
    <script src="~/lib//DataTable/dataTables.responsive.min.js"></script>
    <script>

    
        var dataTable
        $(document).ready(function () {
            dataTable = $('#example1').DataTable({
                language: {
                    url: "/lib/DataTable/fa-lang.json"
                },
                "pagingType": "full_numbers",
                "lengthMenu": [
                    [10, 25, 50, -1],
                    [10, 25, 50, "All"]
                ],
                "columnDefs": [
                    //{ "orderable": false, "targets": 5 }
                ],
                "order": [[0, "desc"]],
                "responsive": true
            });

        });




        //تغییر وضعیت بررسی  سرویس
        var ToggleServiceReaded = function (serviceId, DeleteRow) {

            var $this = $(event.srcElement);
            var data = {
                "serviceId": serviceId
            }

            //$.blockUI({ message: '<h1 class="text-center"><img src="/SinaCustom/img/Spinner-0.9s-58px.svg" />  </h1>' });
            var curentElement = `#read-${serviceId}`;
            //$(curentElement).prop('disabled', true);

            $.ajax({
                method: "POST",
                url: "/Admin/Services/ToggleServiceReaded",
                data: data,
                //contentType: "application/json; charset=utf-8",
                success: function (r) {
                    if (r.status) {
                        if (r.data)
                            $(curentElement).removeClass("btn-warning ").addClass("btn-success").html("بررسی شد")
                        else
                            $(curentElement).removeClass("btn-success ").addClass("btn-warning").html("بررسی نشد")
                    }
                    else {
                        FailedAlert(r.message);
                    }
                },
                error: function (err) {
                    console.log(err)
                    FailedAlert("خطا رخ داده است.");
                }
            });
        }




        //تغییر وضعیت بررسی کامنت
        var ToggleConfirmService = function (serviceId, username, DeleteRow) {

            var $this = $(event.srcElement);
            var data = {
                "serviceId": serviceId,
                "username": username
            }

            //$.blockUI({ message: '<h1 class="text-center"><img src="/SinaCustom/img/Spinner-0.9s-58px.svg" />  </h1>' });
            var curentElement = `#confirm-${serviceId}`;

            //$(curentElement).prop('disabled', true);
            $.ajax({
                method: "POST",
                url: "/Admin/Services/ToggleConfirmService",
                data: data,
                //contentType: "application/json; charset=utf-8",
                success: function (r) {
                    if (r.status) {
                        if (r.data == 0) {
                            $(curentElement).removeClass("btn-warning ").addClass("btn-success").html("تایید شد")
                            $(`#read-${serviceId}`).removeClass("btn-warning").addClass("btn-success").html("بررسی شد")
                        }
                        if (r.data == 1) {
                            $(curentElement).removeClass("btn-success ").addClass("btn-warning").html("تایید نشد")
                            $(`#read-${serviceId}`).removeClass("btn-success").addClass("btn-warning").html("بررسی نشد")
                        }
                    }
                    else {
                        //$.unblockUI();
                        FailedAlert(r.message);
                    }
                },
                error: function (err) {
                    console.log(err)
                    //$.unblockUI();
                    FailedAlert("خطا رخ داده است.");
                }
            });

        }


    </script>
}
