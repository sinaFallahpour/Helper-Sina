@model Helper.Areas.Admin.Models.ViewModels.Category.EditCategoryViewModel;

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}


@section Style{
    <link href="~/SinaCustom/css/StyleSheet.css" rel="stylesheet" />
}

<div class="card">
    <div class="card-body">
        <h3> فرم تصحیح دسته بندی</h3>
        <form asp-action="Edit" class="needs-validation" novalidate="" enctype="multipart/form-data">

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="form-row">
                    <div class="col-md-9 mb-3">
                        <div class="alert alert-success alert-dismissible fade show col-md-8" role="alert">
                            <div asp-validation-summary="ModelOnly" class="text-danger">
                                <strong>
                                    @TempData["Success"]
                                </strong>
                            </div>

                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    </div>

                </div>
            }


            @*@if (!string.IsNullOrEmpty(TempData["Success"] as string))
                {
                    <div class="form-row">
                        <div class="col-md-9 mb-3">
                            <div class="alert alert-success alert-dismissible fade show col-md-8" role="alert">
                                <strong>  @TempData["Success"]</strong>
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                        </div>
                    </div>
                }

                @if (!string.IsNullOrEmpty(TempData["Error"] as string))
                {<div class="form-row">
                        <div class="col-md-9 mb-3">
                            <div class="alert alert-success alert-dismissible fade show col-md-8" role="alert">
                                <strong>  @TempData["Error"] </strong>
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                        </div>
                    </div>
                }*@





            <div class="form-row">
                <div class="col-md-6 mb-3  ">
                    <img src="@Model.PhotoAddress" class="d-block _editimageContainer" id="UploadedImage" />
                </div>
            </div>



            <input type="hidden" asp-for="Id" />

            <div class="form-row">
                <div class="col-md-6 mb-3">
                    <label asp-for="Name" for="validationCustom03"></label>
                    <input asp-for="Name" class="form-control" id="validationCustom03"
                           placeholder="عنوان  دسته بندی">
                    <span asp-validation-for="Name" class="text-danger"> </span>
                </div>
            </div>

            <div class="form-row">
                <div class="col-md-6 mb-3">
                    <label asp-for="EnglishName" for="validationCustom03"></label>
                    <input asp-for="EnglishName" class="form-control" id="validationCustom03"
                           placeholder="عنوان انگلیسی دسته بندی">
                    <span asp-validation-for="EnglishName" class="text-danger"> </span>
                </div>
            </div>






            @*<input asp-for="Photo" class="custom-file-input" onchange="readURL(this);" id="customFile">*@
            @*    <input name="Photo" type="file" class="custom-file-input" onchange="readURL(this);" id="customFile">*@


            <input class="custom-file-input input-validation-error"
                   onchange="readURL(this);"
                   id="customFile"
                   type="file"
                   data-val="true"
                   name="Photo"
                   aria-describedby="customFile-error"
                   aria-invalid="true">
            
    <!-- fileUpload checkBox && selectOption -->
            <div class="form-row">

                <div class="col-md-6 mb-3">
                    <div class="custom-file">
                        @*<input asp-for="Photo" class="custom-file-input" onchange="readURL(this);" id="customFile">*@
                        <label class="form-contro custom-file-label" for="customFile">انتخاب فایل </label>
                    </div>
                    <span asp-validation-for="Photo" class="text-danger"> </span>

                </div>
            </div>






            <div class="form-row mb-4">
                <div class="custom-control custom-checkbox custom-control-inline">
                    <input asp-for="IsEnabled" type="checkbox" id="customCheckBoxInline2" class="custom-control-input">
                    <label asp-for="IsEnabled" class="custom-control-label" for="customCheckBoxInline2">آیا فعال است؟</label>
                    <span asp-validation-for="IsEnabled" class="text-danger"> </span>
                </div>

            </div>


            <button type="submit" class="btn btn-success">ارسال</button>
            <a asp-action="Index" class="btn btn-warning">بازگشت به لیست</a>


        </form>
    </div>
</div>



@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script>

        //  اعتبارسنجی فرم
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);





        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#UploadedImage')
                        .attr('src', e.target.result)
                        .width("100%")
                        .height(240);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }

    </script>
}
